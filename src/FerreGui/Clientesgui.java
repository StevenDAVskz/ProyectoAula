/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package FerreGui;

import ferrefactura.Clases.CommandHandler.FacturacionRepository;
import ferrefactura.Clases.CommandHandler.ProductoRepository;
import ferrefactura.Clases.Facturacion;
import ferrefactura.negocios.acciones.commands.CreateFacturacion;
import ferrefactura.negocios.acciones.commands.CreateProducto;
import javax.swing.JOptionPane;

/**
 *
 * @author steve
 */
public class Clientesgui extends javax.swing.JFrame {

    /**
     * Creates new form Clientes
     */
    public Clientesgui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(153, 153, 153));

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        jLabel1.setText("Bienvenido Cliente");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(210, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(161, 161, 161))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 30, 630, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/apoyo-tecnico.png"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 160, 260, 260));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 770, 480));

        jMenu1.setText("Facturas");

        jMenuItem1.setText("Buscar");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem3.setText("Crear");
        jMenuItem3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuItem3MouseClicked(evt);
            }
        });
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Productos");

        jMenuItem2.setText("Buscar");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem2);

        jMenuItem4.setText("Crear");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem4);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem3MouseClicked
     
    }//GEN-LAST:event_jMenuItem3MouseClicked

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
       
        // Solicitar ID de la factura
        String idFacturaStr = JOptionPane.showInputDialog("Ingrese el ID de la factura:");
        int idFactura;
        try {
            idFactura = Integer.parseInt(idFacturaStr); // Convertimos a int
            if (idFactura <= 0) {
                JOptionPane.showMessageDialog(null, "El ID de la factura debe ser un número mayor que 0.");
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "El ID de la factura debe ser un número entero.");
            return;
        }

        // Solicitar productos de la factura
        String productos = JOptionPane.showInputDialog("Ingrese los productos de la factura (separados por comas):");
        if (productos == null || productos.trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe ingresar al menos un producto.");
            return;
        }

        // Solicitar el nombre del usuario
        String user = JOptionPane.showInputDialog("Ingrese el nombre del usuario:");
        if (user == null || user.trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe ingresar el nombre del usuario.");
            return;
            
         
        }
        
           String precio = JOptionPane.showInputDialog("Ingrese el precio:");
           double precioF;
           precioF = Double.parseDouble(precio);
        if (precio == null || user.trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe ingresar el nombre del usuario.");
            return;
            
         
        }
           CreateFacturacion crear = new CreateFacturacion(idFactura, productos, user, precioF);
           FacturacionRepository n = new FacturacionRepository();
           n.save(crear);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        PRODUCTOMOSTRAR a = new PRODUCTOMOSTRAR();
        a.setVisible(true);
        setVisible(false);
        
        
        
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
 // TODO add your handling code here:
          var nombre = JOptionPane.showInputDialog("Ingrese el nombre del producto:");
        
        // Validamos que el campo no esté vacío
        if (nombre == null || nombre.trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "El nombre no puede estar vacío.");
            return;
        }

        // Solicitar el ID (convertido a entero)
        String idStr = JOptionPane.showInputDialog("Ingrese el ID del producto:");
        try {
           int id = Integer.parseInt(idStr);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "El ID debe ser un número entero.");
            return;
        }

        // Solicitar el precio (convertido a doble)
        String precioStr = JOptionPane.showInputDialog("Ingrese el precio del producto:");
        try {
           double Precio = Double.parseDouble(precioStr);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "El precio debe ser un número decimal.");
            return;
        }

        // Solicitar la cantidad de ventas
        String cantidadVentasStr = JOptionPane.showInputDialog("Ingrese la cantidad de ventas:");
        try {
          int  CantidadVentas = Integer.parseInt(cantidadVentasStr);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "La cantidad de ventas debe ser un número entero.");
            return;
        }

        // Solicitar la descripción
        String Descripcion = JOptionPane.showInputDialog("Ingrese una descripción del producto:");
        
        // Validamos que la descripción no esté vacía
        if (Descripcion == null || Descripcion.trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "La descripción no puede estar vacía.");
            return;
        }

        // Solicitar la calidad
       String Calidad = JOptionPane.showInputDialog("Ingrese la calidad del producto:");
        
        // Validamos que la calidad no esté vacía
        if (Calidad == null || Calidad.trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "La calidad no puede estar vacía.");
            return;
        }

        // Solicitar la cantidad en almacén
        String cantidadAlmacenStr = JOptionPane.showInputDialog("Ingrese la cantidad en almacén:");
        try {
           int CantidadAlmacen = Integer.parseInt(cantidadAlmacenStr);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "La cantidad en almacén debe ser un número entero.");
            return;
        }
        
        CreateProducto productoNuevo = new CreateProducto(nombre, WIDTH, ERROR, MAXIMIZED_VERT, Descripcion, Calidad, EXIT_ON_CLOSE);
        ProductoRepository guardar = new ProductoRepository();
        guardar.save(productoNuevo);        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
       FACTURASMOSTRAR a = new  FACTURASMOSTRAR();
        setVisible(false);
        a.setVisible(true);
        
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables
}
